generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  username            String
  email               String   @unique
  password            String
  passwordLastChanged DateTime? @map("password_last_changed")
  resetToken          String?  @map("reset_token")
  resetTokenExpires   DateTime? @map("reset_token_expires")
  twoFactorAuthSecret Json?    @map("two_factor_auth_secret")
  loginAttempts       Int      @default(0)
  blockedUntil        DateTime? @map("blocked_until")
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  roles               Role[]   @relation("UserRoles")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  users User[] @relation("UserRoles")
}

// This model is now commented out as it's not needed for an implicit many-to-many relationship.
// If you need an explicit many-to-many relationship (for example, to store additional fields),
// you can uncomment and adjust this model accordingly.
// model UserRoles {
//   user   User @relation(fields: [userId], references: [id])
//   userId Int
//   role   Role @relation(fields: [roleId], references: [id])
//   roleId Int
//
//   @@id([userId, roleId])
// }
